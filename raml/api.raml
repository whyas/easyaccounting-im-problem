#%RAML 0.8
---
title: Younion
#version: v0.1
baseUri: http://younion.me:3000
mediaType: application/json

documentation:
  - title: Getting Started
    content: !include doc/younion-getting-started.md
  - title: Contribution
    content: !include doc/contribution.md
  - title: API 使用规范
    content: !include doc/api-usage.md
  - title: 聊天室及时消息 (socket)
    content: !include doc/socket-messages.md

traits:
  # 写操作成功
  - respWithoutPayload:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "code": 1000,
                  "msg": "正常返回",
                  "palyoad": null
                }
  # 返回失败信息
  - respWithError:
      responses:
        200:
          body:
            application/json:
              schema: SimpleResponse
              example: |
                {
                  "code": <<errorCode>>,
                  "msg": "<<msg>>",
                  "palyoad": <<payload>>
                }
  # 接口响应中包含 data 字段
  - respWithPayload:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "code": 1000,
                  "msg": "正常返回",
                  "payload": <<payload>>
                }
  # 接口响应的描述
  - responseDesc:
      responses:
        200:
          description: <<desc>>

/books:
  displayName: 账本操作
  /:
    post:
      description: 添加账本
      queryParameters:
        name:
          description: 账本名字
          required: true
        nativeCurrency:
          description: 账本币种，CNY, USD 等
        financialYear:
          description: 财务年度，年份数字，2015、2016等
          type: number
          default: 当前年份
          required: false
        comment:
          description: 备注，支持
      is:
        - responseDesc:
            desc: 添加成功
        - respWithoutPayload
  /{id}:
    put:
      description: 修改账本信息
      queryParameters:
        name:
          description: 账本名字
        comment:
          description: 备注，支持
      is:
        - responseDesc:
            desc: 更新成功
        - respWithoutPayload
    delete:
      description: 删除账本
      is:
        - responseDesc:
            desc: 删除成功
        - respWithoutPayload
  /{id}/bookkeeping:
    displayName: 记账
    /income:
      post:
        description: 记收入
        queryParameters:
          inoutTypeId:
            type: number
            description: 收支类别 ID，是属于哪一个类别的收支？参考 收支类别的 ID
            required: true
          incomeAccountId:
            description: 收入账户
            type: number
            required: true
          amount:
            description: 收入的金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          businessUnitId:
            description: 往来单位 ID
            type: number
          projectId:
            description: 相关项目 ID
            type: number
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 备注内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
    /expense:
      post:
        description: 记支出
        queryParameters:
          inoutTypeId:
            type: number
            description: 收支类别 ID，是属于哪一个类别的收支？参考 收支类别的 ID
            required: true
          expenseAccountId:
            description: 支出账户
            type: number
            required: true
          amount:
            description: 支出的金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          businessUnitId:
            description: 往来单位 ID
            type: number
          projectId:
            description: 相关项目 ID
            type: number
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 备注内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
    /transfer:
      post:
        description: 记转账，资金调拨
        queryParameters:
          inoutTypeId:
            type: number
            description: 收支类别 ID，是属于哪一个类别的收支？参考 收支类别的 ID
            required: true
          incomeAccountId:
            description: 转入账户
            type: number
            required: true
          expenseAccountId:
            description: 转出账户
            type: number
            required: true
          amount:
            description: 转账金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          businessUnitId:
            description: 往来单位 ID
            type: number
          projectId:
            description: 相关项目 ID
            type: number
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 评论内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
    /begin:
      post:
        description: 记初始
        queryParameters:
          incomeAccountId:
            description: 要初始化的账户
            type: number
            required: true
          amount:
            description: 初始化的金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          businessUnitId:
            description: 往来单位 ID
            type: number
          projectId:
            description: 相关项目 ID
            type: number
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 评论内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
    /headging:
      post:
        description: 记对冲
        queryParameters:
          amount:
            description: 支出的金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          businessUnitId:
            description: 往来单位 ID
            type: number
          payableId:
            description: 应付条目 ID
            type: number
          receivableid:
            description: 应收条目 ID
            type: number
          projectId:
            description: 相关项目 ID
            type: number
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 备注内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
    /refund:
      post:
        description: 记退款
        queryParameters:
          inoutTypeId:
            type: number
            description: 收支类别 ID，是属于哪一个类别的收支？参考 收支类别的 ID
            required: true
          amount:
            description: 交易金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          businessUnitId:
            description: 往来单位 ID
            type: number
          projectId:
            description: 相关项目 ID
            type: number
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 备注内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
    /reconciliation:
      post:
        description: x - 对账
        queryParameters:
          inoutTypeId:
            type: number
            description: 收支类别 ID，是属于哪一个类别的收支？参考 收支类别的 ID
            required: true
          amount:
            description: 交易金额
            type: number
          tradeTime:
            description: 交易日期
            type: date
            required: true
          staffId: 
            description: 经办人、员工 ID
            type: number
          departmentId:
            description: 部门 ID
            type: number
          comment:
            description: 备注内容
          attachmentUrl:
            description: 附件URL, 相对地址，文件的 Key
        is:
          - responseDesc:
              desc: 记录成功
          - respWithoutPayload
  /{id}/report:
    displayName: 报表
    /income:
      get:
        description: 获取收入报表
        queryParameters:
          start:
            description: 统计开始日期
            type: date
          until:
            description: 统计截至日期
            type: date
        is:
          - responseDesc:
              desc: 返回收入报表
          - respWithPayload:
              payload: test
    /expense:
      get:
        description: 获取支出报表
    /profit:
      get:
        description: 获取利润报表
    /cash:
      get:
        description: 获取现金流量报表
    /debit:
      get:
        description: 资产负债表
/entry:
  displayName: 登录, 注册
  /login:
    post:
      description: 登录 Younion
      queryParameters:
        email:
          description: 邮箱
          required: true
        password:
          description: 密码
          required: true
      is:
        - responseDesc:
            desc: 登录成功
        - respWithPayload:
            payload: !include samples/user.sample
  /register:
    post:
      description: 注册 Younion 帐号
      queryParameters:
        email:
          description: 邮箱
          required: true
        password:
          description: 密码
          required: true
      is:
        - responseDesc:
            desc: 注册成功, 请检查邮箱
        - respWithoutPayload
  /resetPassword:
    get:
      description: 申请重置密码
      queryParameters:
        email:
          description: 邮箱
          required: true
      is:
        - responseDesc:
            desc: 重置密码的链接已发送至你的邮箱
        - respWithoutPayload
/users:
  displayName: 用户接口
  /{id}:
    get:
      description: 获取单个用户信息
      is:
        - responseDesc:
            desc: 成功获取用户信息
        - respWithPayload:
            payload: !include samples/user.sample
    put:
      description: 更新用户的信息
      queryParameters:
        email:
          description: 邮箱
        password:
          description: 密码
        avatar:
          description: 头像
        nickname:
          description: 昵称
        sex:
          description: 性别
          enum: [ 'm', 'f' ]
      is:
        - responseDesc:
            desc: 成功更新用户信息
        - respWithPayload:
            payload: !include samples/user.sample
    delete:
      description: 删除用户
      is:
        - responseDesc:
            desc: 删除用户成功
        - respWithPayload:
            payload: !include samples/user.sample
  /{id}/chatrooms:
    get:
      description: 获取我的聊天室列表
      queryParameters:
        start:
          description: 加载更多, 上一次加载的列表的最后一项
        limit:
          description: 本次加载的数量
      is:
        - responseDesc:
            desc: 返回聊天室列表
        - respWithPayload:
            payload: !include samples/chatrooms.sample
  /{id}/starChatrooms:
    post:
      description: 将聊天室添加到星标列表
      is:
        - responseDesc:
            desc: 添加成功
        - respWithoutPayload
      queryParameters:
        chatroom:
          description: 要添加的聊天室 ID
          example: '55c1cb6a2383077524436002'
    get:
      description: 获取加星标的聊天室
      is:
        - responseDesc:
            desc: 返回自己收藏的聊天室的列表
        - respWithPayload:
            payload: !include samples/chatrooms.sample
      queryParameters:
        skip:
          description: 跳过的记录数 (加载更多, 值为已经加载的数量)
        limit:
          description: 本次加载的数量
    delete:
      description: 取消关注聊天室
      is:
        - responseDesc:
            desc: 操作成功
        - respWithoutPayload
      queryParameters:
        chatroom:
          description: 要取消关注的聊天室 ID
          example: '55c1cb6a2383077524436002'
  /{id}/msgbox:
    get:
      description: 获取用户的消息邮箱
      is:
        - responseDesc:
            desc: 返回我收到的消息列表
        - respWithPayload:
            payload: !include samples/messages.sample
/chatrooms:
  displayName: 聊天室
  /:
    post:
      description: 创建聊天室
      queryParameters:
        name:
          description: 聊天室名字
          required: true
        desc:
          description: 聊天室的描述
          required: false
        location:
          description: 位置信息, [longitude, latitude]
          required: true
          example: !include samples/location.sample
        country:
          description: 发表位置国家
        city:
          description: 发表位置城市
        district:
          description: 发表位置区域
        address:
          description: 发表位置地址
        images:
          example: "[\"http://website.com/file.jpg\", \
            \"http://website.com/file2.jpg\", \
            \"http://website.com/file3.jpg\"]"
    get:
      description: 获取聊天室列表
      queryParameters:
        longitude:
          description: 经度
        latitude:
          description: 纬度
        start:
          description: DEPRECATED, 加载 start 之后的条目, 是一个 ID
          example: 55c427d8e1453af207784a6b
        skip:
          description: 要跳过的记录数, 传入已经加载的记录数
          example: 20 // 如果第一次加载了 20 条, 第二次加载的时候, 就传入 skip=20
        limit:
          description: 本次加载的条目数量
        maxDistance:
          description: 最远距离, 单位 米, default 10000 公里 (10000 * 1000) 米
          example: 10000
        stickOnly:
          description: 是否获取置顶帖 (帖子一旦置顶, 只能通过调用时追加 stickOnly=true 获取)

      is:
        - responseDesc:
            desc: 返回聊天室列表
        - respWithPayload:
            payload: !include samples/nearbyChatrooms.sample
  /{id}:
    put:
      description: 更新聊天室属性
      queryParameters:
        name:
          description: 聊天室的名字
      is:
        - responseDesc:
            desc: 聊天室更新成功
        - respWithoutPayload
    delete:
      description: 删除聊天室
      is:
        - responseDesc:
            desc: 删除成功
        - respWithoutPayload
    get:
      description: 获取聊天室信息
      is:
        - responseDesc:
            desc: 返回聊天室信息
        - respWithPayload:
            payload: !include samples/chatroom.sample
  /{id}/stick:
    put:
      description: 将聊天室置顶
      is:
        - responseDesc:
            desc: 操作成功
        - respWithoutPayload
  /{id}/unstick:
    put:
      description: 取消聊天室置顶
      is:
        - responseDesc:
            desc: 操作成功
        - respWithoutPayload
  /{id}/messages:
    get:
      description: 获取聊天室的消息列表, TODO 翻页
      queryParameters:
        start:
          description: 返回记录游标开始
        quantity:
          description: 返回数量
      is:
        - responseDesc:
            desc: 返回消息列表
        - respWithPayload:
            payload: !include samples/messages.sample
    post:
      description: 向聊天室中发一条消息
      queryParameters:
        msg:
          description: 消息内容
          required: true
        mentions:
          description: 消息提到的人
          example: "[1, 2]"
      is:
        - responseDesc:
            desc: 消息发送成功
        - respWithoutPayload
  /{id}/newMessages:
    get:
      description: 获取指定消息之后的新消息, 不提供 limit 属性, 如果消息过多, 仍然会一次获取完所有消息.
      is:
        - responseDesc:
            desc: 返回新消息
        - respWithPayload:
            payload: !include samples/messages.sample
      queryParameters:
        start:
          description: 获取消息的起始点, 客户端的最新的那条消息的 ID, 如果不传, 则 302 到 /:id/messages.
          example: 55c7264db0f4acdd2c4e377c
  /{id}/messages/{id}:
    get:
      description: 获取指定 ID 的消息
      is:
        - responseDesc:
            desc: 返回一条消息
        - respWithPayload:
            payload: !include samples/message.sample
    delete:
      description: 删除一条消息
      is:
        - responseDesc:
            desc: 删除成功
        - respWithoutPayload
