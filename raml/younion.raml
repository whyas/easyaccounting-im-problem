#%RAML 0.8
---
title: Younion
#version: v0.1
baseUri: http://api.touchat.cn
mediaType: application/json

traits:
  # 写操作成功
  - respWithoutPayload:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "code": 1000,
                  "msg": "正常返回",
                  "palyoad": null
                }
  # 写操作成功
  - respWithError:
      responses:
        200:
          body:
            application/json:
              schema: SimpleResponse
              example: |
                {
                  "code": <<errorCode>>,
                  "msg": "<<msg>>",
                  "palyoad": <<payload>>
                }
  # 接口响应中包含 data 字段
  - respWithPayload:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "code": 1000,
                  "msg": "正常返回",
                  "payload": <<payload>>
                }
  # 接口响应的描述
  - responseDesc:
      responses:
        200:
          description: <<desc>>

/login:
  displayName: 登录接口
  /:
    post:
      description: 登录 Younion
      queryParameters:
        email:
          description: 邮箱
          required: true
        password:
          description: 密码
          required: true
      is:
        - responseDesc:
            desc: 登录成功
        - respWithPayload:
            payload: !include samples/user.sample
/register:
  displayName: 注册接口
  /:
    post:
      description: 注册 Younion 帐号
      queryParameters:
        email:
          description: 邮箱
          required: true
        password:
          description: 密码
          required: true
      is:
        - responseDesc:
            desc: 注册成功, 请检查邮箱
        - respWithoutPayload
/users:
  displayName: 用户接口
  /{id}:
    get:
      description: 获取单个用户信息
      is:
        - responseDesc:
            desc: 成功获取用户信息
        - respWithPayload:
            payload: !include samples/user.sample
    put:
      description: 更新用户的信息
      queryParameters:
        email:
          description: 邮箱
        password:
          description: 密码
        avatar:
          description: 头像
        nickname:
          description: 昵称
        sex:
          description: 性别
      is:
        - responseDesc:
            desc: 成功更新用户信息
        - respWithPayload:
            payload: !include samples/user.sample
    delete:
      description: 删除用户
      is:
        - responseDesc:
            desc: 删除用户成功
        - respWithPayload:
            payload: !include samples/user.sample
  /chatrooms:
    get:
      description: 获取我的聊天室列表
      is:
        - responseDesc:
            desc: 返回聊天室列表
        - respWithPayload:
            payload: !include samples/chatrooms.sample
/chatrooms:
  displayName: 聊天室
  /:
    post:
      description: 创建聊天室
      queryParameters:
        name:
          description: 聊天室名字
          required: true
        location:
          description: 位置信息
          required: true
          example: !include samples/location.sample
        images:
          example: "[\"http://website.com/file.jpg\", \
            \"http://website.com/file2.jpg\", \
            \"http://website.com/file3.jpg\"]"
    get:
      description: 获取聊天室列表
      queryParameters:
        longitude:
          description: 经度
        latitude:
          description: 纬度
      is:
        - responseDesc:
            desc: 返回聊天室列表
        - respWithPayload:
            payload: !include samples/chatrooms.sample
  /{id}:
    put:
      description: 更新聊天室属性
      queryParameters:
        name:
          description: 聊天室的名字
      is:
        - responseDesc:
            desc: 聊天室更新成功
        - respWithoutPayload
    delete:
      description: 删除聊天室
      is:
        - responseDesc:
            desc: 删除成功
        - respWithoutPayload
    get:
      description: 获取聊天室信息
      is:
        - responseDesc:
            desc: 返回聊天室信息
        - respWithPayload:
            payload: !include samples/chatroom.sample
  /{id}/messages:
    get:
      description: 获取聊天室的消息列表, TODO 翻页
      queryParameters:
        start:
          description: 返回记录游标开始
        quantity:
          description: 返回数量
      is:
        - responseDesc:
            desc: 返回消息列表
        - respWithPayload:
            payload: !include samples/messages.sample
    post:
      description: 向聊天室中发一条消息
      queryParameters:
        msg:
          description: 消息内容
          required: true
        mentions:
          description: 消息提到的人
          example: "[1, 2]"
      is:
        - responseDesc:
            desc: 消息发送成功
        - respWithoutPayload
  /{id}/messages/{id}:
    delete:
      description: 删除一条消息
      is:
        - responseDesc:
            desc: 删除成功
        - respWithoutPayload
